Assignment Operators

The simple assignment operator (=) assigns the right side to the left side.

C++ provides shorthand operators that have the capability of performing an operation and an assignment at the same time.
For example:
int x = 10;
x += 4; // equivalent to x = x + 4
x -= 5; // equivalent to x = x - 5

!Assignment operator (=) assigns the right side to the left side.

->x+=10;

The same shorthand syntax applies to the multiplication, division, and modulus operators.

x *= 3; // equivalent to x = x * 3
x /= 2; // equivalent to x = x / 2
x %= 4; // equivalent to x = x % 4

->int x = 10;
x /= 5;

Increment Operator


The increment operator is used to increase an integer's value by one, and is a commonly used C++ operator.

x++; â€‹//equivalent to x = x + 1

!The increment operator is used to increase an integer's value by one.

->x++ has the same meaning as: x=x+1;
->int x = 20;
x++;

cout << x << endl;


The increment operator has two forms, prefix and postfix
++x; // prefix
x++; // postfix

Prefix increments the value, and then proceeds with the expression.
Postfix evaluates the expression and then performs the incrementing.

Prefix example:
x = 5;
y = ++x;
// x is 6, y is 6
Postfix example:
x = 5;
y = x++;
// x is 6, y is 5

!The prefix example increments the value of x, and then assigns it to y.
The postfix example assigns the value of x to y, and then increments it.

->What's the difference between ++x and x++?
x++ uses x's value then increments it
++x increments x's value before using it


Decrement Operator


The decrement operator (--) works in much the same way as the increment operator, but instead of increasing the value, it decreases it by one.
--x; // prefix
x--; // postfix
!The decrement operator (--) works in much the same way as the increment operator.

->int x = 20;

x--;