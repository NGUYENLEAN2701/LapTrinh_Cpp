This


Every object in C++ has access to its own address through an important pointer called the this pointer.
Inside a member function this may be used to refer to the invoking object.
Let's create a sample class:

class MyClass {
 public:
  MyClass(int a) : var(a)
  { }
 private:
  int var;
};

!Friend functions do not have a this pointer, because friends are not members of a class.

->class Hannah {
public:
 Hannah(int);
 void printCrap();
private:
 int h;
};

This

The printInfo() method offers three alternatives for printing the member variable of the class.

class MyClass {
 public:
  MyClass(int a) : var(a)
  { }
  void printInfo() {
   cout << var<<endl;
   cout << this->var<<endl;
   cout << (*this).var<<endl; 
  }
 private:
  int var;
};

All three alternatives will produce the same result.

!this is a pointer to the object, so the arrow selection operator is used to select the member variable.



->For a member named ''mem'', select the two correct ways to print out a class member. 
cout<< mem;
cout<<this->mem;


example: 

#include <iostream>
using namespace std;

class MyClass {
    public:
        MyClass(int a) : var(a)
        { }
        void printInfo() {
            cout << var <<endl;
            cout << this->var <<endl;
            cout << (*this).var <<endl; 
        }
    private:
        int var;
};

int main() {
    MyClass obj(42);
    obj.printInfo();
}
Cả ba cách để truy cập biến thành viên đều hoạt động.
!Note that only member functions have a this pointer.

->Type in the keyword name to store the address of the current object. this

This 
Bạn có thể tự hỏi tại sao cần sử dụng từ khóa this , khi bạn có tùy chọn chỉ định trực tiếp biến. 
từ khóa this có vai trò quan trọng trong việc điều hành quá tải , mà sẽ được đề cập trong các bài học sau.

->void MyClass::printValue() {
 cout << this->mem;
}

